SQL> CREATE OR REPLACE FUNCTION estimate_fare (
  2      p_origin      IN VARCHAR2,
  3      p_destination IN VARCHAR2,
  4      p_seat_count  IN NUMBER
  5  ) RETURN NUMBER
  6  IS
  7      v_distance NUMBER;
  8      v_fare_per_km CONSTANT NUMBER := 1500;
  9      v_total_fare NUMBER;
 10  BEGIN
 11      SELECT distance_km INTO v_distance
 12      FROM city_distance
 13      WHERE origin = p_origin AND destination = p_destination;
 14  
 15      v_total_fare := v_distance * v_fare_per_km * p_seat_count;
 16      RETURN v_total_fare;
 17  
 18  EXCEPTION
 19      WHEN NO_DATA_FOUND THEN
 20          DBMS_OUTPUT.PUT_LINE('Route not found.');
 21          RETURN -1;
 22      WHEN OTHERS THEN
 23          DBMS_OUTPUT.PUT_LINE('Unexpected error: ' || SQLERRM);
 24          RETURN -1;
 25  END;
 26  /

Function created.

SQL> clear screen

SQL> CREATE TABLE holiday_dates (
  2      holiday_date DATE PRIMARY KEY,
  3      description VARCHAR2(100)
  4  );

Table created.

SQL> INSERT INTO holiday_dates VALUES (TO_DATE('2025-07-01', 'YYYY-MM-DD'), 'Independence Day'); INSERT INTO holiday_dates VALUES (TO_DATE('2025-07-04', 'YYYY-MM-DD'), 'Liberation Day');
INSERT INTO holiday_dates VALUES (TO_DATE('2025-07-01', 'YYYY-MM-DD'), 'Independence Day'); INSERT INTO holiday_dates VALUES (TO_DATE('2025-07-04', 'YYYY-MM-DD'), 'Liberation Day')
                                                                                          *
ERROR at line 1:
ORA-00933: SQL command not properly ended 


SQL> INSERT INTO holiday_dates VALUES (TO_DATE('2025-07-01', 'YYYY-MM-DD'), 'Independence Day');

1 row created.

SQL> INSERT INTO holiday_dates VALUES (TO_DATE('2025-07-04', 'YYYY-MM-DD'), 'Liberation Day');

1 row created.

SQL> clear screen

SQL> CREATE TABLE audit_log (
  2      log_id NUMBER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  3      user_id NUMBER,
  4      operation VARCHAR2(10),
  5      object_name VARCHAR2(30),
  6      action_time TIMESTAMP,
  7      status VARCHAR2(10)
  8  );

Table created.

SQL> clear screen

SQL> CREATE OR REPLACE TRIGGER trg_restrict_dml
  2  BEFORE INSERT OR UPDATE OR DELETE ON booking
  3  FOR EACH ROW
  4  DECLARE
  5      v_day VARCHAR2(10);
  6      v_today DATE := TRUNC(SYSDATE);
  7      v_holiday NUMBER;
  8  BEGIN
  9      SELECT TO_CHAR(SYSDATE, 'DY', 'NLS_DATE_LANGUAGE = ENGLISH') INTO v_day FROM dual;
 10  
 11      SELECT COUNT(*) INTO v_holiday
 12      FROM holiday_dates
 13      WHERE holiday_date = v_today;
 14  
 15      IF v_day IN ('MON', 'TUE', 'WED', 'THU', 'FRI') OR v_holiday > 0 THEN
 16          INSERT INTO audit_log (user_id, operation, object_name, action_time, status)
 17          VALUES (USERENV('SESSIONID'), 'BLOCKED', 'BOOKING', SYSTIMESTAMP, 'DENIED');
 18  
 19          RAISE_APPLICATION_ERROR(-20001, 'DML operations are blocked on weekdays and public holidays.');
 20      ELSE
 21          INSERT INTO audit_log (user_id, operation, object_name, action_time, status)
 22          VALUES (
 23              USERENV('SESSIONID'),
 24              CASE
 25                  WHEN INSERTING THEN 'INSERT'
 26                  WHEN UPDATING THEN 'UPDATE'
 27                  WHEN DELETING THEN 'DELETE'
 28              END,
 29              'BOOKING',
 30              SYSTIMESTAMP,
 31              'ALLOWED'
 32          );
 33      END IF;
 34  END;
 35  /
CREATE OR REPLACE TRIGGER trg_restrict_dml
                          *
ERROR at line 1:
ORA-04089: cannot create triggers on objects owned by SYS 


SQL> sqlplus admin/Arsene@Thurs_25195_Arsene_ridesharingApp_DB
SP2-0734: unknown command beginning "sqlplus ad..." - rest of line ignored.
SQL> EXIT
